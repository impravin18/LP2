
#include <bits/stdc++.h>

using namespace std;

void dfs(vector<vector<int>> &g,vector<int> &vis,int u){
    if(!vis[u]){
        vis[u]=1;
        cout<<u<<" ";
        for(auto v:g[u]) if(!vis[v]) dfs(g,vis,v);
    }
}

void bfs(vector<vector<int>> &g,int u){
    queue<int> q;
    vector<int> vis(g.size(),0);
    q.push(u);
    while(!q.empty()){
        int v = q.front();
        q.pop();
        if(!vis[v]){
            vis[v]=1;
            cout<<v<<" ";
            for(auto p:g[v]) if(!vis[p]) q.push(p);
        }
    }
}

int main()
{
    int n,e;
    cout<<"Enter no of nodes ";
    cin>>n;
    vector<vector<int>> g(n);
    cout<<"Enter no of edges ";
    cin>>e;
    for(int i=0;i<e;i++){
        int u,v;
        cout<<"Enter source and destination ";
        cin>>u>>v;
        g[u].push_back(v);
        g[v].push_back(u);
    }
    vector<int> vis(n,0);
    cout<<"The DFS is \n";
    dfs(g,vis,0);
    cout<<"\n";
    cout<<"The BFS is \n";
    bfs(g,0);
    return 0;
}
